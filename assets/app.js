var app=angular.module("app",["ngRoute","ui.router","ngCookies"]);angular.module("app").factory("authInterceptor",["$window",function(o){return{request:function(e){return e.headers=e.headers||{},o.localStorage.token&&(e.headers.Authorization=o.localStorage.token),e}}}]).config(["$routeProvider","$httpProvider",function(o,e){e.interceptors.push("authInterceptor"),o.when("/",{templateUrl:"/main"}).when("/signup",{templateUrl:"/signup"}).when("/signin",{templateUrl:"/signin"}).when("/userinfo",{templateUrl:"/userinfo"}).when("/successfulSignup",{templateUrl:"/successfulSignup"}).when("/offer",{templateUrl:"/offer"}).when("/confirmation",{templateUrl:"/confirmation"}).otherwise("/")}]),angular.module("app").controller("authCtrl",["$q","$scope","$window","$location","$route","$rootScope","AuthService",function(o,e,t,n,r,a,i){e.regex="(\\+[0-9]\\d{1})*(\\s)*([0-9]\\d{2})(\\s*)([0-9]\\d{2})(\\s*)([0-9]\\d{2})",e.submitError=!1,e.errorMessage="",a.isLoggedIn=function(){return i.isAuthenticated},e.signin=function(){console.log("login"),i.signin(e.user).then(function(o,e){a.isLogedIn=!0,t.location.reload(),console.log(o)})},e.signout=function(){i.signout(),a.isLogedIn=!1,t.location.reload(),console.log("logout")},e.getUserInfo=function(){i.getUserInfo().then(function(o){console.log(o),e.userinfo=o})},e.submitForm=function(o){o?i.signup(e.user).then(function(o){console.log("Pomyślnie zarejestrowano"),e.submitError=!1,i.signin(e.user).then(function(o,e){a.isLogedIn=!0,"http://localhost:3001/#/confirmation"==t.location.toString()?t.location.reload():t.location.href="#/successfulSignup"})},function(o){switch(console.log(o),o.code){case 11e3:e.submitError=!0,e.errorMessage="Wybrany email jest już zarejestrowany. Proszę wybrać inny.";break;default:e.submitError=!0,e.errorMessage="Upss coś poszło nie tak. Proszę spróbować później."}}):(e.submitError=!0,e.errorMessage="Upss coś poszło nie tak. Proszę spróbować później.")},e.$watch("submitError",function(o){console.log(o)})}]),angular.module("app").controller("confirmationCtrl",["$q","$window","$location","$cookies","$scope","$rootScope","AuthService",function(o,e,t,n,r,a,i){r.isSignedIn=!1,r.room=JSON.parse(n.get("room")),r.dateFrom=JSON.parse(n.get("dates")).dateFrom,r.dateTo=JSON.parse(n.get("dates")).dateTo,r.extras=JSON.parse(n.get("extras")).extras,r.numOfDays=JSON.parse(n.get("extras")).numOfDays;var s=function(){i.isAuthenticated?r.isSignedIn=!0:r.isSignedIn=!1};s()}]),angular.module("app").directive("compareTo",function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(o,e,t,n){n.$validators.compareTo=function(e){return e==o.otherModelValue},o.$watch("otherModelValue",function(){n.$validate()})}}}),angular.module("app").controller("offerCtrl",["$scope","$cookies","$location","$window","offerSvc",function(o,e,t,n,r){o.offer={},o.extras=[],o.selectedExtras=[];var a={};o.dateFrom="",o.dateTo="",o.roomName="";var i=function(){o.offer=JSON.parse(e.get("room")),o.extras=u(),a=JSON.parse(e.get("dates")),o.dateFrom=s(new Date(a.dateFrom)),o.dateTo=s(new Date(a.dateTo)),o.roomName=o.offer.type,o.roomPrice=o.offer.price,o.extrasTotalPrice=0},s=function(o){var e=o.getUTCDate(),t=o.getUTCMonth()+1,n=o.getUTCFullYear();return""+e+"-"+t+"-"+n};o.addOrRemoveExtra=function(e){var t=o.selectedExtras.indexOf(e);e.buttonText=e.buttonToggle?"Dodaj +":"Usuń -",e.buttonToggle=!e.buttonToggle,t==-1?(o.selectedExtras.push(e),o.extrasTotalPrice+=e.price*c()):(o.selectedExtras.splice(t,1),o.extrasTotalPrice-=e.price*c())},o.toConfirmation=function(){console.log("asdasd");var t={extras:o.selectedExtras,numOfDays:c()};e.put("extras",JSON.stringify(t)),n.location.href="#/confirmation"},o.toPrevious=function(){n.location.href="#/main"};var u=function(){r.getExtras().then(function(e){o.extras=e;for(var t=0;t<o.extras.length;t++)o.extras[t].buttonText="Dodaj +",o.extras[t].buttonToggle=!1})},c=function(){var o=864e5,e=new Date(a.dateFrom),t=new Date(a.dateTo),n=Date.UTC(e.getFullYear(),e.getMonth(),e.getDate()),r=Date.UTC(t.getFullYear(),t.getMonth(),t.getDate());return Math.floor((r-n)/o)};i()}]),angular.module("app").controller("roomCtrl",["$q","$cookies","$scope","$window","$location","roomService","offerSvc","$filter",function(o,e,t,n,r,a,i,s){t.dateFrom="",t.dateTo="",t.noRoomsError=!1,t.errorMsg="",t.rooms=[],t.numberOfBeds=1;var u=function(){var o=new Date;console.log(o),t.dateFrom=o;var e=new Date;e.setDate(e.getDate()+1),t.dateTo=e};t.init=function(){u(),t.findRooms()},t.findRooms=function(){a.getRooms({from:t.dateFrom.toISOString(),to:t.dateTo.toISOString(),beds:t.numberOfBeds}).then(function(o){t.rooms=o},function(o){t.noRoomsError=!0,t.errorMsg="Coś poszło nie tak."})},t.addRoom=function(o){e.put("room",JSON.stringify(o)),e.put("dates",JSON.stringify({dateFrom:t.dateFrom,dateTo:t.dateTo})),i.chooseRoom(o),n.location.href="#/offer"},t.test=function(){console.log(t.rooms),t.findRooms()}}]),angular.module("app").filter("uniqueCategories",function(){return function(o,e){if(angular.isArray(o)){for(var t=[],n={},r=0;r<o.length;r++){var a=o[r][e];angular.isUndefined(n[a])&&(n[a]=!0,t.push(o[r]))}return t}return o}}),angular.module("app").service("AuthService",["$http","$q",function(o,e){function t(){var o=window.localStorage.getItem(s);console.log("loading User info..."),o&&a(o)}function n(){i=void 0,u=!1,o.defaults.headers.common.Authorization=void 0,window.localStorage.removeItem(s)}function r(o){window.localStorage.setItem(s,o),a(o)}function a(e){u=!0,i=e,o.defaults.headers.common.Authorization=i}var i,s="token",u=!1,c=function(t){return e(function(e,n){o.post("/api/authenticate",t).then(function(o){o.data.success?(r(o.data.token),e(o.data.msg,o.data.success)):n(o.data.msg,o.data.success)})})},l=function(){n()},f=function(t){return e(function(e,n){o.post("/api/signup",t).then(function(o){o.data.success?(console.log("jestem w resolve"),e(o.data.msg)):n(o.data.msg)})})};t();var d=function(){return e(function(e,t){o.get("/api/userinfo").then(function(o){o.data.success?e(o.data.msg):t(o.data.msg)})})};return{signin:c,signout:l,signup:f,getUserInfo:d,isAuthenticated:u}}]),angular.module("app").service("offerSvc",["$q","$http",function(o,e){var t=function(o){choosenRoom=o},n=function(){return choosenRoom},r=function(){return o(function(o,t){e.get("/api/getExtras").then(function(e){e.data.success?o(e.data.extras):t(e.data.error)})})};return{chooseRoom:t,getRoom:n,getExtras:r}}]),angular.module("app").service("roomService",["$q","$http",function(o,e){var t=function(t){return o(function(o,n){e.post("/api/findRooms",t).then(function(e){e.data.success?(console.log("Pobrano pokoje"),o(e.data.rooms)):n(e.data.error)})})};return{getRooms:t}}]);
//# sourceMappingURL=data:application/json;base64,
